<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>UnityAutoRegistration</id>
    <version>1.0.0.1</version>
    <title>Unity Auto Registration</title>
    <authors>agovorov</authors>
    <owners>agovorov</owners>
    <licenseUrl>http://autoregistration.codeplex.com/license</licenseUrl>
    <projectUrl>http://autoregistration.codeplex.com/</projectUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <description>Unity Auto Registration extends Unity IoC container and provides fluent syntax to configure rules for automatic type registration. Using few code lines you can scan specified assemblies and register all types that satisfy your rules.

Rules for determining whether to include/exclude type/assembly are predicates (Predicate&lt;T&gt;) so you can use lambda syntax to specify them or direct method name. There are a few methods in If helper class (like Implements, DecoratedWith) to cover some common scenarios of type registering.</description>
    <summary>Unity Auto Registration extends Unity IoC container and provides fluent syntax to configure rules for automatic type registration.</summary>
    <tags>.NET 3.5 Auto registration Autoregistration container dependency injection Enterprise Library Fluent Interface Inversion of Control IOC IoC/DI lambda unity Unity 2</tags>
    <dependencies>
      <dependency id="Unity" version="2.1.505.0" />
    </dependencies>
    <references>
      <reference file="Unity.AutoRegistration.dll" />
    </references>
  </metadata>
</package>